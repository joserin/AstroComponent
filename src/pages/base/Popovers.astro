---
import Layout from '../../layouts/Layout.astro';
import Popover from '../../components/base/Popover.astro';
import SectionTab from '../../components/sectionTab.astro';
import Scroll from '../../components/structure/Scroll.astro';

import Component from '../../i18n/base/popover/code-component.md';
import Css from '../../i18n/base/popover/code-css.md';
import Js from '../../i18n/base/popover/code-js.md';
import OneImplementacion from '../../i18n/base/popover/code-one.md';
import TwoImplementacion from '../../i18n/base/popover/code-two.md';

const defaultTitle = ['Preview', 'Implementation'];
const basicTitle = ['Information','Component', 'CSS', 'JS'];
---
<Layout 
    title="Components PopOver."
    description='Component UI PopOver to astro'>
    <div class="maqueta">
        <header>
            <h2 class=" text-2xl font-bold">Popover</h2>
            <p>Displays rich content in a portal, triggered by a button.</p>
        </header>
        <SectionTab titles={basicTitle} slotName={['preview', 'component', 'css', 'js']} class='h-[19.8rem]'>
            <section slot="preview" class="flex flex-col gap-2 h-72 p-3 my-3 fondo-previsual">
                <Scroll class='w-full h-72'>
                    <div class="flex flex-col gap-2">
                        <h3>Props</h3>
                        <ul>
                            <li>
                                title (string): This prop sets the text displayed on the button that triggers the popover. 
                                It's optional.
                            </li>
                            <li>
                                class (string): This prop allows you to add a custom CSS class to the popover container. 
                                It's also optional.
                            </li>
                            <li>
                                ...rest: This spread operator allows you to pass any other props to the component.
                            </li>
                        </ul>
                        <h3>Template</h3>
                        <ul>
                            <li>
                                The component uses a single div element with the class relative element-popover. 
                                This element acts as the container for the popover button and content.
                            </li>
                            <li>
                                slot[name="boton-action"]: This named slot defines where the popover button should be placed. 
                                By default, it renders a button with the class button-popover and displays the content 
                                set in the title prop.
                            </li>
                            <li>
                                span: This element represents the popover content itself. It uses class 
                                binding to dynamically set classes based on conditions
                            </li>
                        </ul>
                        <h3>Styles</h3>
                        <ul>
                            <li>
                                .default (default class for popover container): Sets background color, text color, padding, and width.
                            </li>
                            <li>
                                .button-popover: Styles the button element. It includes a hover effect that changes the background color.
                            </li>
                        </ul>
                        <h3>Script</h3>
                        <ul>
                            <li>It retrieves all elements with the class element-popover.</li>
                            <li>
                                Loops through each element and finds the button (button-popover) 
                                and the popover content (popover-display) elements.
                            </li>
                            <li>
                                Attaches a click event listener to the button. When clicked
                            </li>
                            <li>
                                Attaches a global click event listener to the document. When clicked anywhere
                            </li>
                        </ul>
                    </div>
                </Scroll>
            </section>
            <section slot="component" class="max-h-72">
                <Scroll class='w-full h-72'>
                    <Component />
                </Scroll>
            </section>
            <section slot="css" class="max-h-72">
                <Scroll class='w-full h-72'>
                    <Css />
                </Scroll>
            </section>
            <section slot="js" class="max-h-72">
                <Scroll class='w-full h-72'>
                    <Js />
                </Scroll>
            </section>
        </SectionTab>
        <SectionTab titles={defaultTitle} slotName={['preview', 'implementation']} class='h-[13.8rem]'>
            <section slot="preview" class="flex gap-1 justify-center items-center h-48 fondo-previsual">
                <Popover title='uno'>
                    <div>
                        HERE SHOW
                    </div>
                </Popover>
            </section>
            <section slot="implementation" >
                <Scroll class='w-full h-48'>
                    <OneImplementacion />
                </Scroll>
            </section>
        </SectionTab>
        <SectionTab titles={defaultTitle} slotName={['preview', 'implementation']} class='h-[16.8rem]'>
            <section slot="preview" class="flex gap-1 justify-center h-60 fondo-previsual">
                <Popover class='h-fit p-1'>
                    <button slot="boton-action" class="button-popover" aria-label="Button-show">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon pointer-events-none" width="30" height="30" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M12 4c4.29 0 7.863 2.429 10.665 7.154l.22 .379l.045 .1l.03 .083l.014 .055l.014 .082l.011 .1v.11l-.014 .111a.992 .992 0 0 1 -.026 .11l-.039 .108l-.036 .075l-.016 .03c-2.764 4.836 -6.3 7.38 -10.555 7.499l-.313 .004c-4.396 0 -8.037 -2.549 -10.868 -7.504a1 1 0 0 1 0 -.992c2.831 -4.955 6.472 -7.504 10.868 -7.504zm0 5a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z" stroke-width="0" fill="currentColor" />
                        </svg>
                    </button>
                    <div class="p-1 bg-black bg-opacity-25">
                        <header class="flex flex-col gap-3">
                            <h4 class="flex justify-center">Title</h4>
                            <p>this is a example</p>
                        </header>
                        <main class="flex flex-col justify-between p-1">
                            <section class="flex justify-between gap-1 items-center">
                                <span>Name</span>
                                <input class="text-black p-1 border border-purple-300" type="text">
                            </section>
                            <section class="flex justify-between gap-1 items-center">
                                <span>Age</span>
                                <input class="text-black p-1 border border-purple-300" type="number">
                            </section>
                            <section class="flex justify-between gap-1 items-center">
                                <span>Email</span>
                                <input class="text-black p-1 border border-purple-300" type="email">
                            </section>
                        </main>
                    </div>
                </Popover>
            </section>
            <section slot="implementation" >
                <Scroll class='w-full h-60'>
                    <TwoImplementacion />
                </Scroll>
            </section>
        </SectionTab>
    </div>
</Layout>

<style>
    ul{
        display: flex;
        flex-direction: column;
        text-wrap: pretty;
        gap: 0.25rem;
        font-weight: 200;
        font-size: 0.8rem;
    }
    li{
        padding: 0.1rem;
    }
    h3{
        text-align: center;
        font-weight: 700;
        color: rgb(205, 155, 251);
    }
</style>