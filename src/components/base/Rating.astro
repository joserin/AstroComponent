---
interface Props {
    count: number;
    identify?: string;
    name: string;
    class?: string;
    [x: string]: any;
    selectColor?:string;
}

const defaulClass='flex';
const { selectColor = "rgb(255 255 0)", name, count, identify = 'one', class: className= defaulClass, ...rest} = Astro.props;
let emptyArray = new Array(count);

for (let i = 0; i < count; i++) {
    emptyArray[i] = i;
}
---
<div class:list={["rating", defaulClass]} {...rest}>
    {
        emptyArray.map((index) =>
            <input type="checkbox" id={identify + index} class="mask" name={name} value={index}/>
            <label for={identify + index}>
                <slot/>
            </label>
        )
    }
</div>

<style define:vars={{ selectColor }}>

    .rating input[type="checkbox"] {
        display: none;
    }

    .rating label {
        display: inline-block;
        width: 20px;
        height: 20px;
        color: rgb(135, 148, 148);
        cursor: pointer;
    }
    
    .rating input[type="checkbox"]:checked + label {
        color: var(--selectColor);
    }

    .rating input[type="checkbox"]:checked{
        color: rgb(135, 148, 148);    
    }
</style>

<script>
    const ratingContainer = document.getElementsByClassName('rating');
    if(ratingContainer){
        for(let i=0; i < ratingContainer.length; i++){
            const starInputs = ratingContainer[i].querySelectorAll('.mask');
            if(starInputs){
                starInputs.forEach((elementInputIndividual, index) => {
                    elementInputIndividual.addEventListener('click', () => {
                        if((elementInputIndividual as HTMLInputElement).checked){
                            for (let j = 0; j <= index; j++) {
                                console.log(j, elementInputIndividual, 'checked');
                                (starInputs[j] as HTMLInputElement).checked = true;
                            }
                        }else{
                            for (let j = index; j < starInputs.length; j++) {
                                console.log(j, elementInputIndividual, 'not checked');
                                (starInputs[j] as HTMLInputElement).checked = false;
                            }
                        }
                    });
                });
            }
        }
    }
</script>


