---
interface Props {
    title?:string;
    class?: string;
    [x: string]: any;
}
const defaultClass='default';
const { title, class: className = defaultClass, ...rest } = Astro.props;
---

<div class="dropdown">
    <slot name="boton">
        <button class="button-dropdown default-button">{title}</button>
    </slot>
    <div class:list={["dropdown-content", className]} {...rest}>
        <slot/>
    </div>
</div>

<style>
    .dropdown{
        position: relative;
    }
    .dropdown-content{
        position: absolute;
        display: none;
        z-index: 10;
    }
    .default{
        width: fit-content;
        height: fit-content;
        font-size: 0.875rem;
        line-height: 1.25rem;
    }
    .default-button{
        padding: 0.75rem 0.5rem;
        background-color: rgb(106, 27, 180);
        border-radius: 0.75rem;
        font-size: 1rem;
        line-height: 1rem;
        border: 2px white solid;
    }
    .default-button:hover{
        background-color: rgb(64, 12, 113);
    }
</style>

<script>
    const dropdown = document.getElementsByClassName("dropdown");

    function closeAllDropdowns(drop: any) {
        if(dropdown){
            for(let i=0; i < dropdown.length; i++){
                if(dropdown[i] !== drop){
                    const botonMenu = dropdown[i].querySelector('.button-dropdown');
                    const dropdownContent = dropdown[i].querySelector('.dropdown-content') as HTMLElement;
                    if(botonMenu && dropdownContent){
                        botonMenu.classList.toggle('active');
                        dropdownContent.style.display = "none";
                    }
                }
            }
        }
    }

    if(dropdown){
        for(let i=0; i < dropdown.length; i++){
            const botonMenu = dropdown[i].querySelector('.button-dropdown');
            const dropdownContent = dropdown[i].querySelector('.dropdown-content') as HTMLElement;
            const focus = dropdown[i].querySelector('.close-focus-out') as HTMLElement;
            
            if(botonMenu && dropdownContent){
                botonMenu.addEventListener('click', () =>{
                    botonMenu.classList.toggle('active');
                    if (dropdownContent.style.display === "block") {
                        dropdownContent.style.display = "none";
                    } else {
                        dropdownContent.style.display = "block";
                    }
                    closeAllDropdowns(dropdown[i]);
                });
            }
            if(focus){
                document.addEventListener('click', function(event) {
                    if (!dropdown[i].contains(event.target as Node)) {
                        dropdownContent.style.display = "none"
                    }
                });
            }
        }
    }
</script>